<apex:page lightningStyleSheets="true" controller="ThirteenPageController">

    <head>
        <style type="text/css">
            .custPopup {
                background-color: white;
                border-width: 2px;
                border-style: solid;
                z-index: 9999;
                left: 50%;
                padding: 10px;
                position: absolute;
                width: 500px;
                margin-left: -250px;
                top: 100px;
            }

            .popupBackground {
                background-color: black;
                opacity: 0.20;
                filter: alpha(opacity=20);
                position: absolute;
                width: 100%;
                height: 100%;
                top: 0;
                left: 0;
                z-index: 9998;
            }
        </style>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <apex:slds />
    </head>
    <apex:includeLightning />
    <c:header isHideBackButton="true" isHideNextButton="{!IF(isHide,true,false)}" myValue="{!$CurrentPage.Name}" contactId="{!contactId}"
    />
    <apex:pageBlock>
        <div class="slds-text-heading_medium">
            <apex:form>
                <apex:commandlink value="Show instructions" action="{!showPopup}" rerender="tstpopup" />
            </apex:form>
        </div>
        <apex:pageBlockSection columns="2">
            <apex:pageBlockTable value="{!limits}" var="l">
                <apex:column value="{!l.Description__c}" />
                <apex:column value="{!l.Value__c}" />
            </apex:pageBlockTable>
            <apex:pageBlockTable value="{!limitsSecondPart}" var="l">
                <apex:column value="{!l.Description__c}" />
                <apex:column value="{!l.Value__c}" />
            </apex:pageBlockTable>
        </apex:pageBlockSection>
    </apex:pageBlock>
    <apex:form>
        <apex:outputPanel id="tstpopup">
            <apex:outputPanel styleClass="popupBackground" layout="block" rendered="{!displayPopUp}" />
            <apex:outputPanel styleClass="custPopup" layout="block" rendered="{!displayPopUp}">
                <div class="slds-text-longform">
                    <ol class="slds-list_ordered slds-text-heading_medium">
                        <li>
                            <a href="https://drive.google.com/uc?export=download&id=1VM85sTVwfKbQaZWpagmrXEdnvqfdXcZQ" download="">Download csv file</a>
                        </li>
                        <li>Start the wizard.
                            <ul class="slds-is-nested slds-list_dotted">
                                <li>From Setup, enter Data Import Wizard in the Quick Find box, then select Data Import Wizard.</li>
                                <li>Review the information provided on the welcome page, then click Launch Wizard.</li>
                            </ul>
                        </li>
                        <li>Choose the data that you want to import
                            <ul class="slds-is-nested slds-list_dotted">
                                <li>To import click Custom Objects and choose Limits</li>
                                <li>Specify add new records</li>
                                <li>Specify was downloaded file by dragging the CSV file to the upload area of the page</li>
                                <li>Select comma as a value separator</li>
                                <li>Click Next</li>
                            </ul>
                        </li>
                        <li>Map your data fields to Salesforce data fields and click Next.</li>
                        <li>Click Start Import</li>
                        <li>Check import status</li>
                        <li>Close the window and refresh the page</li>
                        <li>If you don't see of data, you'll wait and refresh the page</li>

                    </ol>
                </div>
                <apex:commandButton value="Close" action="{!closePopup}" rerender="tstpopup" />
            </apex:outputPanel>
        </apex:outputPanel>
    </apex:form>
</apex:page>